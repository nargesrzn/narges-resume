{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/UpIcon.js","sections/SkillSection.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","onClick","PaymentResponse","style","display","flexDirection","alignItems","justifyContent","transform","src","data","icons","down","TitleSection","name","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","AboutSection","section","items","content","UpIcon","up","SkillSection","skill","image","alt","Navbar","navItems","App","state","color1","color2","color3","color4","counter","changeColor","bind","zamine","setState","margin","position","backgroundColor","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e586cca8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"}`}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nconst DownIcon = props => {\r\n  return (\r\n    <div\r\n      onClick={PaymentResponse.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        transform: \"translateY(230px)\"\r\n      }}\r\n    >\r\n      <img src={data.icons.down} />\r\n    </div>\r\n  );\r\n};\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport \"../components/Fullpage.css\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport \"./TitleSection.css\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nclass TitleSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Element name=\"title\" className=\"element\" />\r\n          <Fullpage className=\"first\">\r\n            <SnowStorm />\r\n            <h1 className=\"title\">{data.title}</h1>\r\n\r\n            <h2>{data.subtitle}</h2>\r\n            <div className=\"icons-wrapper\">\r\n              {Object.keys(data.links).map(key => {\r\n                return (\r\n                  <div className=\"icon\">\r\n                    <SocialIcon url={data.links[key]} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={0}\r\n              duration={500}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              <DownIcon />\r\n            </Link>\r\n          </Fullpage>\r\n\r\n          <Element name=\"about\" className=\"element\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h2>{data.section[0].title}</h2>\r\n          <p>{data.section[0].items[0].content}</p>\r\n          <p>{data.section[0].items[1].content}</p>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"skills\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <DownIcon />\r\n          </Link>\r\n        </Fullpage>\r\n        <Element name=\"skills\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nconst UpIcon = props => {\r\n  return (\r\n    <div\r\n      onClick={PaymentResponse.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        transform: \"translateY(170px)\"\r\n      }}\r\n    >\r\n      <img src={data.icons.up} />\r\n    </div>\r\n  );\r\n};\r\nexport default UpIcon;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport \"./SkillSection.css\";\r\nimport UpIcon from \"../components/UpIcon\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"third\">\r\n          <h2 className=\"skill\">{data.section[1].title}</h2>\r\n          <div className=\"card-wrapper\">\r\n            {data.section[1].items.map(skill => {\r\n              return (\r\n                <div className=\"card\">\r\n                  <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} alt=\"logo\" />\r\n                  </div>\r\n                  <div className=\"skill-title-wrapper\">\r\n                    <h4>{skill.content.title}</h4>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"title\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <UpIcon />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport \"../App.css\";\r\nimport \"./navbar.css\";\r\nimport { Link, Element } from \"react-scroll\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\">\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={500}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <div className=\"nav\">{data.navItems[0]}</div>\r\n        </Link>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"skill\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={500}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <div className=\"nav\">{data.navItems[1]}</div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color1: \"#95dee3\",\n      color2: \"#edcdc2\",\n      color3: \"#72f772\",\n      color4: \"black\",\n      counter: 0\n    };\n    this.changeColor = this.changeColor.bind(this);\n  }\n  changeColor() {\n    let rang = [\"green\", \"#b3cde0\", \"#f4b6c2\", \"#e6e6ea\"];\n    let zamine = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        color1: \"#95dee3\",\n        color2: \"#edcdc2\",\n        color3: \"#72f772\",\n        color4: \"black\"\n      });\n    } else\n      this.setState({\n        color1: zamine[this.state.counter],\n        color2: zamine[this.state.counter],\n        color3: zamine[this.state.counter],\n        color4: rang[this.state.counter],\n        counter: this.state.counter + 1\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n\n        <div>\n          <img\n            src=\"magic.png\"\n            style={{\n              margin: \"10px\",\n              display: \"flex\",\n              position: \"fixed\"\n            }}\n            onClick={this.changeColor}\n          />\n        </div>\n        <div\n          style={{\n            backgroundColor: this.state.color1,\n            color: this.state.color4\n          }}\n        >\n          <TitleSection />\n        </div>\n        <div\n          style={{\n            backgroundColor: this.state.color2,\n            color: this.state.color4\n          }}\n        >\n          <AboutSection />\n        </div>\n        <div\n          style={{\n            backgroundColor: this.state.color3,\n            color: this.state.color4\n          }}\n        >\n          <SkillSection />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}